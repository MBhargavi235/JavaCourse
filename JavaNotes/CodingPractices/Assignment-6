1.Maximum number of Handshakes

It was Raj's first day of school. His teacher Anu asked the students to meet every other student in the 
class and to introduce themselves. The teacher asked them to do handshakes when they meet each other.
If there are N number of students in the class then write a program to print the total number of handshakes
made by the students.

Input
The first line is a single integer N.

Output
Prin the value representing total number of handshakes.

Explanation
In the given example there are 5 persons.
The first person shakes his hand with 4 persons. 
The second person then shakes his hand with 3 persons.
The third person shakes his hand with 2 persons. 
The fourth person shakes his hand with 1 person.
From this, the number of handshakes = 4 + 3 + 2 + 1
So, the output should be 10.

Sample Input 1
5
Sample Output 1
10
Sample Input 2
3
Sample Output 2
3

Solution

import java.util.Scanner;

class Main {
    public static void main(String[] args) { 
        // Write your code here
        Scanner input=new Scanner(System.in);
        int a=input.nextInt();
        int b=a*(a-1)/2;
        System.out.println(b);
    }
}

2.Denominations-2

The possible denominations of currency notes are 100,50,20 and 10. A to be withdrawn is given as input.
Write a program to break the amount into minimum number of bank notes.

Input 
The first line of input is an integer A 

Output
The output should be a string represting number of 100,50,20,10 notes possible

Explanation
In the given example amount 370, it can be written as 
370=3*(100)+1*(50)+1*(20)+0*(10)
Then the output should be 
100 Notes: 3 
50 Notes: 1 
20 Notes: 1 
10 Notes: 0

Sample Input1
370
Output
100 Notes: 3 
50 Notes: 1 
20 Notes: 1 
10 Notes: 0

Sample Input2
130
Output
100 Notes: 1
50 Notes: 0
20 Notes: 1 
10 Notes: 1 

Solution

import java.util.Scanner;

class Main {
    public static void main(String[] args) { 
        // Write your code here
        Scanner input=new Scanner(System.in);
        int amount=input.nextInt();
        int notes_100=0;
        int notes_50=0;
        int notes_20=0;
        int notes_10=0;
        if(amount>=100){
            notes_100=amount/100;
            amount=amount%100;
        }
        if(amount>=50){
            notes_50=amount/50;
            amount=amount%50;
        }
        if(amount>=20){
            notes_20=amount/20;
            amount=amount%20;
        }
        if(amount>=10){
            notes_10=amount/10;
            amount=amount%10;
        }
    System.out.println("100 Notes: "+notes_100);
    System.out.println("50 Notes: "+notes_50);
    System.out.println("20 Notes: "+notes_20);
    System.out.println("10 Notes: "+notes_10);
    }
}


3.Denominations-3

Write a program to find the minimum number of notes required for the amount M. Available note denominations are 50,50,10,1.

Input 
The first line is a single integer M.

Output
Print in denominations

Explanation
Given M=1543 it can be written as 
1543=3*(500)+0*(50)+4*(10)+1*(3)
The output should be 500:3 50:0 10:4 1:3

Sample Input1
1543
Output
500: 3 50: 0 10: 4 1: 3

Sample Input2
1259
Output
500: 2 50: 5 10: 0 1: 9

Solution

import java.util.Scanner;

class Main {
    public static void main(String[] args) { 
        // Write your code here
        Scanner input=new Scanner(System.in);
        int amount=input.nextInt();
        int notes_500=0;
        int notes_50=0;
        int notes_10=0;
        int notes_1=0;
        if(amount>=500){
            notes_500=amount/500;
            amount=amount%500;
        }
        if(amount>=50){
            notes_50=amount/50;
            amount=amount%50;
        }
        if(amount>=10){
            notes_10=amount/10;
            amount=amount%10;
        }
        notes_1=amount;
    System.out.println("500: "+notes_500+" 50: "+notes_50+" 10: "+notes_10+" 1: "+notes_1);
    }
}

4.Denominations-4

write a program to find the minimum number of notes required for the amount M. Available note 
denominations are 2000,500,200,50,20,5,2,1.

Input 
The first line is a single integer M.

Output

Print M in denominations.

Explanation
Given M=2257
Then 2257 can be written as 2000*1+500*0+200*1+50*1+20*0+5*1+2*1+1*0 
So the output should be 2000:1 500:0 200:1 50:1 20:0 5:1 2:1 1:0

Sample Input1
2257
Output
2000:1 500:0 200:1 50:1 20:0 5:1 2:1 1:0

Sample Input2
2345
Output
2000:1 500:0 200:1 50:2 20:2 5:1 2:0 1:0

Solution

import java.util.Scanner;

class Main {
    public static void main(String[] args) { 
        // Write your code here
        Scanner input=new Scanner(System.in);
        int amount=input.nextInt();
        int notes_2000=0;
        int notes_500=0;
        int notes_200=0;
        int notes_50=0;
        int notes_20=0;
        int notes_5=0;
        int notes_2=0;
        int notes_1=0;
        if(amount>=2000){
            notes_2000=amount/2000;
            amount=amount%2000;
        }
        if(amount>=500){
            notes_500=amount/500;
            amount=amount%500;
        }
        if(amount>=200){
            notes_200=amount/200;
            amount=amount%200;
        }
        if(amount>=50){
            notes_50=amount/50;
            amount=amount%50;
        }
        if(amount>=20){
            notes_20=amount/20;
            amount=amount%20;
        }
        if(amount>=5){
            notes_5=amount/5;
            amount=amount%5;
        }
        if(amount>=2){
            notes_2=amount/2;
            amount=amount%2;
        }
        notes_1=amount;
    System.out.println("2000:"+notes_2000+" 500:"+notes_500+" 200:"+notes_200+" 50:"+notes_50+" 20:"+notes_20+" 5:"+notes_5+" 2:"+notes_2+" 1:"+notes_1);
    }
}

