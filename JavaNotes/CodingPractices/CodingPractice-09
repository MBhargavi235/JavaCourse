1.Reverse the String

Write a program to print the reverse of the given string.

Input 
The input will be a single line containing a string.

Output
The output should be a single line containing the reverse of the given string.

Explanation
For example, if the given string is "Hurray! We have won the match.", your code should print the reverse
of the string, which is ".hctam eht now evah eW !yarruH".

Sample Input1
Hurray! We have won the match.
Output 
.hctam eht now evah eW !yarruH

Sample Input2
Competitive Programming
Output
gnimmargorP evititepmoC

Solution

import java.util.*;

class Main{
    public static void main(String [] args){
        Scanner input=new Scanner(System.in);
        String number=input.nextLine();
        String newString="";
         for (int i = 0; i < number.length(); i++) {
             newString=number.substring(i,i+1)+newString;
        }
        System.out.println(newString);
        input.close();
    }
}

/*
import java.util.*;

class Main{
    public static void main(String [] args){
        Scanner input=new Scanner(System.in);
        String a=input.nextLine();
        //System.out.println(a);
        String c="";
         for (int i = 0; i < a.length(); i++) {
             char b=a.charAt(i);
             c=b+c;
        }
        System.out.println(c);
    }
}
*/

2.Sum of Series

Write a program to find the sum of the series 2+22+222+2222+.... N terms 

Input 
The input will be a single line containing a positive integer (N).

Output
The output should be a single line containing the sum of series up to N terms.

Explanation
For example, if the given number is 4, the series will be 2+22+222+2222 So the output should be the sum of the series, which is 2468.
For example, if the given number is 4, the series will be 2+22+222+2222+22222+222222+2222222+22222222 So the output should be the sum of the series, which is 24691356.

Sample Input1
3
Output 
246

Sample Input2
8
Output
24691356

Solution

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        long total=0;
        long t=2;
        for(int i=1;i<n+1;i++){
            total=total+t;
            t=(t*10)+2;
        }
        System.out.println(total);
        input.close();
    }
}
/*
import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int a=input.nextInt();
        //System.out.println(a);
        String b="2";
        long sum=0;
        for(int i=1;i<=a;i++){
           String c=b.repeat(i);
           long d=Long.parseLong(c);
           sum+=d;
        }
        System.out.println(sum);
    }
}
*/

3.Factors of a Number

Write a program to print factors of the given number.
Note: A number F is considered as factor of the given number N, if N is exactly divisible by F 
(Remainder after dividing N with F is zero. N%F==0)

Input 
The input will be a single line containing a positive integer.

Output
The output should contain the factors of the given number each in a new line.

Explanation
For example, if the given number is 6, which is exactly divisible by 1,2,3,6, then output should be 
1 
2 
3 
6

Sample Input1
6
Output 
1 
2 
3 
6

Sample Input2
18
Output
1 
2 
3 
6
9
18

Solution

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        for(int i=1;i<=n;i++){
            if(n%i==0)
           System.out.println(i);
        }
    }
}

4.Sum of All Factors

Write a program to print sum of all the factors for a given number.

Input 
The input will be a single line containing a positive integer.

Output
The output should be a sinle line containing the sum of factors of the given number.

Explanation
For example, if the given number is 12, which is exactly divisible by 1,2,3,6,and 12, the output should 
be the sum of all these factors (1+2+3+4+6+12), which is 28. 
Similarly, if the given number is 8, which is exactly divisible by 1,2,4,and 8, the output should 
be the sum of all these factors (1+2+4+8), which is 15. 

Sample Input1
12
Output 
28

Sample Input2
8
Output
15

Solution

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        int sum=0;
        for(int i=1;i<=n;i++){
            if(n%i==0)
                sum+=i;
        }
        System.out.println(sum);
    }
}

5.Perfect Number

Write a program to check whther the given number is perfect number or not.
A number is considered as Perfect number if sum of all factors excluding itself is equal to the number.

Input 
The input will be a single line containing a positive integer.

Output
The output should be a sinle line containing either "Perfect Number" or "Not a Perfect Number".

Explanation
For example, if the given number is 6, the factors of 6 excluding it are 1,2, and 3. The sum of these 
factors is 6, which is equal to the given number. So the output should be "Perfect Number".
For example, if the given number is 21, the factors of 21 excluding it are 1,3, and 7. The sum of these 
factors is 11, which isn ot equal to the given number. So the output should be "Not a Perfect Number".

Sample Input1
6
Output 
Perfect Number

Sample Input2
21
Output
Not a Perfect Number

Solution

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        int result=0;
        for(int i=1;i<n;i++){
            if(n%i==0){
                result+=i;
            }
        }
        if(result==n)
            System.out.println("Perfect Number");
        else
            System.out.println("Not a Perfect Number");
    }
}

6.Multipliaction Table

Write a program to print the multipliaction table of the given number (N) up to ten multiples in the 
formar Nxi=M.

Input 
The first line of input will contain an integer.

Output
The output should be ten lines containing the multiples in the given format.

Explanation
For example, if the given number is 3, you code should print the multipliaction table like 
3 x 1 = 3
3 x 2 = 6
3 x 3 = 9
3 x 4 = 12
3 x 5 = 15
3 x 6 = 18
3 x 7 = 21
3 x 8 = 24
3 x 9 = 27
3 x 10 = 30

Sample Input1
3
Output 
3 x 1 = 3
3 x 2 = 6
3 x 3 = 9
3 x 4 = 12
3 x 5 = 15
3 x 6 = 18
3 x 7 = 21
3 x 8 = 24
3 x 9 = 27
3 x 10 = 30

Sample Input2
10
Output
10 x 1 = 10
10 x 2 = 20
10 x 3 = 30
10 x 4 = 40
10 x 5 = 50
10 x 6 = 60
10 x 7 = 70
10 x 8 = 80
10 x 9 = 90
10 x 10 = 100

Solution

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int a=input.nextInt();
        for(int i=1;i<=10;i++){
            System.out.println(a+" x "+i+" = "+(a*i));
        }
    }
}

7.Hallow Square

Write a program to print a hallow square pattern of N rows and N columns the asterisk character(*),
where integer N is given as an input.

Input 
The input will be a single line containing a positive integer.

Output
The output should be the N number of lines and N number of columns with the asterisk character(*).
Note: There is a space after each asterisk character(*).

Explanation
For example, if the given number is 4, you code should print the following pattern:

*  *  *  *
*        *
*        *
*  *  *  *

Sample Input1
4
Output 
*  *  *  *
*        *
*        *
*  *  *  *

Sample Input2
6
Output
*  *  *  *  *  *
*              *
*              *
*              *
*              *
*  *  *  *  *  *

Solution

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int n=input.nextInt();
        for(int i=1;i<=n;i++){
            if(i==1 || i==n){
              System.out.println("* ".repeat(n));
            }
            else{
                System.out.println("* "+"  ".repeat(n-2)+"* ");
            }
        }
    }
}
